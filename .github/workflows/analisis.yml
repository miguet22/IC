name: IC Migue

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r req.txt
          pip install pytest pytest-cov flake8

      - name: Lint con flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Ejecutar tests con cobertura
        run: |
          pytest pruebas/ --cov=pruebas --cov-report=xml

      - name: Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    outputs:
      app_url: ${{ steps.set_url.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      - name: Deploy a Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Set app URL
        id: set_url
        run: echo "url=https://ic-ingsw.onrender.com/" >> $GITHUB_OUTPUT

  notify-slack-success:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Notificar a Slack si fue exitoso ðŸŽ‰
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text":"âœ… *Deploy exitoso!* ðŸŽ‰\nRepositorio: '${{ github.repository }}'\nAutor: '${{ github.actor }}'\nðŸ”— URL: https://ic-ingsw.onrender.com/",
            "attachments":[{"image_url":"https://media1.tenor.com/m/wsChytFfrS4AAAAd/monki-flip-monkey.gif"}]
          }' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-slack-on-failure:
    needs: build
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Notificar a Slack si fallÃ³
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"ðŸš¨ *El workflow fallÃ³.*\nRepositorio: '${{ github.repository }}'\nCommit: '${{ github.sha }}'\nAutor: '${{ github.actor }}'"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

  update-clickup-task:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Parsear nombre de tarea desde el commit si existe
        id: parse_commit
        run: |
          if git rev-parse HEAD >/dev/null 2>&1; then
            COMMIT_MESSAGE=$(git log -1 --pretty=%B)
            TASK_NAME=$(echo "$COMMIT_MESSAGE" | grep -o "task [0-9]*" || echo "task not found")
            echo "task_name=${TASK_NAME}" >> $GITHUB_OUTPUT
          else
            echo "task_name=no-task" >> $GITHUB_OUTPUT

      - name: Mostrar nombre de tarea parseado
        run: echo "Tarea detectada desde commit ${{ steps.parse_commit.outputs.task_name }}"
