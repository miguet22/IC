name: IC Migue

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r req.txt
          pip install pytest pytest-cov flake8 requests

      - name: Lint con flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Ejecutar tests con cobertura
        run: |
          pytest pruebas/ --cov=pruebas --cov-report=xml

      - name: Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@v4
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: success()
    outputs:
      app_url: ${{ steps.set_url.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      - name: Deploy a Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Set app URL
        id: set_url
        run: echo "url=https://ic-ingsw.onrender.com/" >> $GITHUB_OUTPUT
  
  notify-slack-success:
    needs: deploy
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Ejecutar script de Python para notificar a Slack sobre el exito del deploy
        run: |
            python3 yaml/slack_notify_sucess.py
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

update-trello-card:
  needs: deploy
  if: success()
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # necesario para poder leer el último commit

    - name: Obtener nombre de tarea y acción desde el commit
      id: tarea
      run: |
        mensaje=$(git log -1 --pretty=%B)
        mensaje_lc=$(echo "$mensaje" | tr '[:upper:]' '[:lower:]')
        if [[ $mensaje_lc == \#finish* ]]; then
          echo "accion=finish" >> $GITHUB_OUTPUT
          echo "tarea=${mensaje:8}" >> $GITHUB_OUTPUT
        elif [[ $mensaje_lc == \#start* ]]; then
          echo "accion=start" >> $GITHUB_OUTPUT
          echo "tarea=${mensaje:7}" >> $GITHUB_OUTPUT
        else
          echo "accion=none" >> $GITHUB_OUTPUT
        fi

    - name: Ejecutar script de Trello
      if: steps.tarea.outputs.accion != 'none'
      run: |
        python yaml/trello_task_manager.py "${{ steps.tarea.outputs.accion }}" "${{ steps.tarea.outputs.tarea }}"
      env:
        TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
        TRELLO_API_TOKEN: ${{ secrets.TRELLO_API_TOKEN }}
        TRELLO_TODO_LIST_ID: ${{ secrets.TRELLO_TODO_LIST_ID }}
        TRELLO_DOING_LIST_ID: ${{ secrets.TRELLO_DOING_LIST_ID }}
        TRELLO_DONE_LIST_ID: ${{ secrets.TRELLO_DONE_LIST_ID }}


  


  notify-slack-on-failure:
      needs: build
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: Ejecutar script de Python para notificar a Slack sobre el error
          run: |
            python3 yaml/slack_notify_error.py
          env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            GITHUB_REPOSITORY: ${{ github.repository }}
            GITHUB_SHA: ${{ github.sha }}
            GITHUB_ACTOR: ${{ github.actor }}

