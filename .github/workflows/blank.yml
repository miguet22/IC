name: IC Migue

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Mostrar estructura del proyecto
        run: ls -R

      - name: Verificar versión de Python
        run: python3 --version

      - name: Ejecutar hola.py y guardar error si falla
        id: run_script
        run: |
          set -o pipefail
          python3 hola.py 2> error.log || echo "failed" > failed.flag

      - name: Subir archivo de error si existe
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: error-log
          path: |
            error.log
            failed.flag

      - name: Forzar fallo si falló el script
        if: always()
        run: |
          if [ -f failed.flag ]; then
            echo "Script falló, marcando el job como fallido."
            exit 1
          fi

  notify-slack-on-failure:
    needs: build
    if: needs.build.result == 'failure'
    runs-on: ubuntu-latest

    steps:
      - name: Descargar archivo de error
        uses: actions/download-artifact@v4
        with:
          name: error-log

      - name: Leer error y exportarlo como variable
        run: |
          echo "ERROR_MSG<<EOF" >> $GITHUB_ENV
          cat error.log >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Enviar notificación a Slack
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"🚨 *El workflow falló.*\n📂 Repositorio: ${{ github.repository }}\n👤 Autor: ${{ github.actor }}\n🔗 Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}\n\n🧪 *Error:* \n\`\`\`\n$ERROR_MSG\n\`\`\`\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}
